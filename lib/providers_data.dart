import 'package:flutter/cupertino.dart';import 'package:job_seekar_app/constants.dart';import 'models/Comments.dart';import 'package:http/http.dart' as http;import 'dart:convert';enum Stage { ERROR, LOADING, DONE }class ProvidersData with ChangeNotifier {  String errorMessage = "Network Error";  Stage stage;  List _commentsList=[];  String post_id;  void getList(videosList) {    // _commentsList.clear();    _commentsList = videosList;  }  List<Comments> get commentsList {    return [..._commentsList];  }  // void updateCurrentVideoId(String value) async {  //   this.stage = Stage.LOADING;  //   // notifyListeners();  //  //   try {  //     // validateInput(value);  //     await fetchCommentsList(value);  //     stage = Stage.DONE;  //   } on SocketException catch (e) {  //     this.errorMessage = "Network Error";  //     stage = Stage.ERROR;  //   } catch (e) {  //     stage = Stage.ERROR;  //   }  //   // notifyListeners();  // }  Future<List<Comments>>  fetchCommentsList(String post_id) async {    http.Response response = await http.get(Uri.parse(get_comments + "?post_id=${post_id}"));    var jsonResponse;    if (response.statusCode == 200) {      jsonResponse = json.decode(response.body);      print(jsonResponse);      List data = jsonResponse["data"] as List;      print(data.toString());      var list= data.map<Comments>((json) => Comments.fromJson(json)).toList();    // var videosList = json.decode(response.body)["data"];      getList(list);      notifyListeners();    return list;  }}  void addTaskInList(Comments comments) {    _commentsList.add(comments);    notifyListeners();  }}